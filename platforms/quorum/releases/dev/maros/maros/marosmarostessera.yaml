apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: marosmarostessera
  namespace: maros-quo
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: marosmarostessera
  helmVersion: v3
  chart:
    git: https://github.com/RositsaKrasteva/blockchain-automation-framework.git
    ref: feature-386
    path: platforms/quorum/charts/node_tessera  
  values:
    replicaCount: 1
    metadata:
      namespace: maros-quo
      labels:
    images:
      node: quorumengineering/quorum:21.4.2
      alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
      tessera: quorumengineering/tessera:21.4.0
      busybox: busybox
      mysql: mysql/mysql-server:5.7
    node:
      name: maros
      status: default
      consensus: ibft
      subject: O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH
      mountPath: /etc/quorum/qdata
      imagePullSecret: regcred
      keystore: keystore_1
      
      servicetype: ClusterIP
      lock: false
      ports:
        rpc: 8546
        raft: 50401
        tm: 443
        quorum: 21000
        db: 3306
      dbname: demodb
      mysqluser: demouser
    vault:
      address: http://vault.internal.dev2.aws.blockchaincloudpoc-develop.com:20001
      secretprefix: secret/maros-quo/crypto/maros
      serviceaccountname: vault-auth
      keyname: quorum
      tm_keyname: transaction
      role: vault-role
      authpath: quorummaros
    tessera:
      dburl: "jdbc:mysql://maros-tessera:3306/demodb"
      dbusername: demouser
      url: "https://maros.quo.dev2.aws.blockchaincloudpoc-develop.com:443"
      clienturl: "http://maros-tessera:8888" #TODO: Enable tls strict for q2t
      othernodes:
        - url: https://caros.quo.dev2.aws.blockchaincloudpoc-develop.com
        - url: https://maros.quo.dev2.aws.blockchaincloudpoc-develop.com
        - url: https://stros.quo.dev2.aws.blockchaincloudpoc-develop.com
        - url: https://warros.quo.dev2.aws.blockchaincloudpoc-develop.com
      tls: "STRICT"
      trust: "TOFU"
    genesis: ewogICJjb25maWciOiB7CiAgICAiY2hhaW5JZCI6IDEwLAogICAgImhvbWVzdGVhZEJsb2NrIjogMCwKICAgICJlaXAxNTBCbG9jayI6IDAsCiAgICAiZWlwMTUwSGFzaCI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICAgImVpcDE1NUJsb2NrIjogMCwKICAgICJlaXAxNThCbG9jayI6IDAsCiAgICAiYnl6YW50aXVtQmxvY2siOiAwLAogICAgImNvbnN0YW50aW5vcGxlQmxvY2siOiAwLAogICAgInBldGVyc2J1cmdCbG9jayI6IDAsCiAgICAiaXN0YW5idWxCbG9jayI6IDAsCiAgICAiaXN0YW5idWwiOiB7CiAgICAgICJlcG9jaCI6IDMwMDAwLAogICAgICAicG9saWN5IjogMCwKICAgICAgImNlaWwyTmJ5M0Jsb2NrIjogMAogICAgfSwKICAgICJ0eG5TaXplTGltaXQiOiAxMjgsCiAgICAicWlwNzE0QmxvY2siOiAwLAogICAgImlzTVBTIjogZmFsc2UsCiAgICAiaXNRdW9ydW0iOiB0cnVlLAogICAgIm1heENvZGVTaXplQ29uZmlnIjogWwogICAgICB7CiAgICAgICAgImJsb2NrIjogMCwKICAgICAgICAic2l6ZSI6IDEyOAogICAgICB9CiAgICBdCiAgfSwKICAibm9uY2UiOiAiMHgwIiwKICAidGltZXN0YW1wIjogIjB4NjE0ODkyNjQiLAogICJleHRyYURhdGEiOiAiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZjg5YWY4NTQ5NGQyNGQxYTI3NzI2N2Q0ZTUxOTBkYzMzNjFkZWE0YjIyNDVhODc3ZGU5NDljZjBiMzNiOWVlOWNmZmYyZDc4NWE4MWMyZDRhOWUzZDRjNzA4N2U5NDYyNjQ3MWYzYjMyZDE1NWM3ZjlhNThiMmM0MWFiNzhiNjA2NTUzYTg5NDVjOWJhZWY1Y2ZkMzI4ODMwNzNlYWRkOTZmYTliY2NlZTc5NDZjZDBiODQxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGMwIiwKICAiZ2FzTGltaXQiOiAiMHhlMDAwMDAwMCIsCiAgImRpZmZpY3VsdHkiOiAiMHgxIiwKICAibWl4SGFzaCI6ICIweDYzNzQ2OTYzNjE2YzIwNjI3OTdhNjE2ZTc0Njk2ZTY1MjA2NjYxNzU2Yzc0MjA3NDZmNmM2NTcyNjE2ZTYzNjUiLAogICJjb2luYmFzZSI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICJhbGxvYyI6IHsKICAgICI1YzliYWVmNWNmZDMyODgzMDczZWFkZDk2ZmE5YmNjZWU3OTQ2Y2QwIjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0sCiAgICAiNjI2NDcxZjNiMzJkMTU1YzdmOWE1OGIyYzQxYWI3OGI2MDY1NTNhOCI6IHsKICAgICAgImJhbGFuY2UiOiAiMHg0NDZjM2IxNWY5OTI2Njg3ZDJjNDA1MzRmZGI1NjQwMDAwMDAwMDAwMDAiCiAgICB9LAogICAgIjljZjBiMzNiOWVlOWNmZmYyZDc4NWE4MWMyZDRhOWUzZDRjNzA4N2UiOiB7CiAgICAgICJiYWxhbmNlIjogIjB4NDQ2YzNiMTVmOTkyNjY4N2QyYzQwNTM0ZmRiNTY0MDAwMDAwMDAwMDAwIgogICAgfSwKICAgICJkMjRkMWEyNzcyNjdkNGU1MTkwZGMzMzYxZGVhNGIyMjQ1YTg3N2RlIjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0KICB9LAogICJudW1iZXIiOiAiMHgwIiwKICAiZ2FzVXNlZCI6ICIweDAiLAogICJwYXJlbnRIYXNoIjogIjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCIKfQ==
    staticnodes: 
      [
    "enode://0a763dcdfa17d47e5ecd93abfe9a0445509b2d5d5b9dbeafe09d2c156a34a559c4fdaab5450a99cbaa02566b17645b9db15d5e06392530514e992544886c3b1a@caros.quo.dev2.aws.blockchaincloudpoc-develop.com:15090?discport=0",
    "enode://e0b039011f414713aef7b4fc5712f0110ef17aff0a3b57b9d99ece16809bf1b008d95f5a36a97525f31de9941abc099083cc1032659f4e708d3cf9fb6dffe6c2@maros.quo.dev2.aws.blockchaincloudpoc-develop.com:15020?discport=0",
    "enode://d944a01acb7ee3fec2bb0231913f0166d12b477a0f9d90b489bef9366563c3d0ea80c79a6fff3f2fa91f788b8ab23e59ede0572d0a905273d1feeac277b3cb46@stros.quo.dev2.aws.blockchaincloudpoc-develop.com:15030?discport=0",
    "enode://b2f6042a09c78cd40336465183e957189a6a0d1793754f404491a26bcd8bf81b8cc020c25d0abe3b2bc2526b7bb397fb6860638bded12b240997dc956951dbcb@warros.quo.dev2.aws.blockchaincloudpoc-develop.com:15040?discport=0"
]
    proxy:
      provider: "ambassador"
      external_url: maros.quo.dev2.aws.blockchaincloudpoc-develop.com
      portTM: 443
      rpcport: 15021
      quorumport: 15020
      clientport: 8888
    storage:
      storageclassname: awsstorageclass
      storagesize: 1Gi
      dbstorage: 1Gi
