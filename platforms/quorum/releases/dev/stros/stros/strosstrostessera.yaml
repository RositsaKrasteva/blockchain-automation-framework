apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: strosstrostessera
  namespace: stros-quo
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: strosstrostessera
  helmVersion: v3
  chart:
    git: https://github.com/RositsaKrasteva/blockchain-automation-framework.git
    ref: feature-386
    path: platforms/quorum/charts/node_tessera  
  values:
    replicaCount: 1
    metadata:
      namespace: stros-quo
      labels:
    images:
      node: quorumengineering/quorum:21.4.2
      alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
      tessera: quorumengineering/tessera:21.4.0
      busybox: busybox
      mysql: mysql/mysql-server:5.7
    node:
      name: stros
      status: default
      consensus: ibft
      subject: O=Store,OU=Store,L=40.73/-74/New York,C=US
      mountPath: /etc/quorum/qdata
      imagePullSecret: regcred
      keystore: keystore_1
      
      servicetype: ClusterIP
      lock: false
      ports:
        rpc: 8546
        raft: 50401
        tm: 443
        quorum: 21000
        db: 3306
      dbname: demodb
      mysqluser: demouser
    vault:
      address: http://vault.internal.dev2.aws.blockchaincloudpoc-develop.com:20001
      secretprefix: secret/stros-quo/crypto/stros
      serviceaccountname: vault-auth
      keyname: quorum
      tm_keyname: transaction
      role: vault-role
      authpath: quorumstros
    tessera:
      dburl: "jdbc:mysql://stros-tessera:3306/demodb"
      dbusername: demouser
      tls: "STRICT"
      url: "https://stros.quo.dev2.aws.blockchaincloudpoc-develop.com:443"
      clienturl: "http://stros-tessera:8888" #TODO: Enable tls strict for q2t
      othernodes:
        - url: https://caros.quo.dev2.aws.blockchaincloudpoc-develop.com
        - url: https://maros.quo.dev2.aws.blockchaincloudpoc-develop.com
        - url: https://stros.quo.dev2.aws.blockchaincloudpoc-develop.com
        - url: https://warros.quo.dev2.aws.blockchaincloudpoc-develop.com
      tls: "STRICT"
      trust: "TOFU"
    genesis: ewogICJjb25maWciOiB7CiAgICAiY2hhaW5JZCI6IDEwLAogICAgImhvbWVzdGVhZEJsb2NrIjogMCwKICAgICJlaXAxNTBCbG9jayI6IDAsCiAgICAiZWlwMTUwSGFzaCI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICAgImVpcDE1NUJsb2NrIjogMCwKICAgICJlaXAxNThCbG9jayI6IDAsCiAgICAiYnl6YW50aXVtQmxvY2siOiAwLAogICAgImNvbnN0YW50aW5vcGxlQmxvY2siOiAwLAogICAgInBldGVyc2J1cmdCbG9jayI6IDAsCiAgICAiaXN0YW5idWxCbG9jayI6IDAsCiAgICAiaXN0YW5idWwiOiB7CiAgICAgICJlcG9jaCI6IDMwMDAwLAogICAgICAicG9saWN5IjogMCwKICAgICAgImNlaWwyTmJ5M0Jsb2NrIjogMAogICAgfSwKICAgICJ0eG5TaXplTGltaXQiOiAxMjgsCiAgICAicWlwNzE0QmxvY2siOiAwLAogICAgImlzTVBTIjogZmFsc2UsCiAgICAiaXNRdW9ydW0iOiB0cnVlLAogICAgIm1heENvZGVTaXplQ29uZmlnIjogWwogICAgICB7CiAgICAgICAgImJsb2NrIjogMCwKICAgICAgICAic2l6ZSI6IDEyOAogICAgICB9CiAgICBdCiAgfSwKICAibm9uY2UiOiAiMHgwIiwKICAidGltZXN0YW1wIjogIjB4NjE0OGM1MmMiLAogICJleHRyYURhdGEiOiAiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZjg5YWY4NTQ5NGM5OWY5ZWIwMzg4NjJjZGQ3OWU4OTllZjYwMmUxZWRhNzU1YWU0Y2Y5NGI0NDAyNTg3MGJjZmMxYTc2ODQ4YzYwNWYyMDViM2QxZGE1NDMwZTQ5NDYxMTBiMzlkMTk4YjYxYzFmNDM0MzZkNzgzMGY5ZDI0MDNiMjI1NzU5NDc5NDkzOTI0M2ZiZDlkMWZlMzQ5OTE5NDI1ZGUzZjNhZmQyMzRiNDdiODQxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGMwIiwKICAiZ2FzTGltaXQiOiAiMHhlMDAwMDAwMCIsCiAgImRpZmZpY3VsdHkiOiAiMHgxIiwKICAibWl4SGFzaCI6ICIweDYzNzQ2OTYzNjE2YzIwNjI3OTdhNjE2ZTc0Njk2ZTY1MjA2NjYxNzU2Yzc0MjA3NDZmNmM2NTcyNjE2ZTYzNjUiLAogICJjb2luYmFzZSI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICJhbGxvYyI6IHsKICAgICI2MTEwYjM5ZDE5OGI2MWMxZjQzNDM2ZDc4MzBmOWQyNDAzYjIyNTc1IjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0sCiAgICAiNzk0OTM5MjQzZmJkOWQxZmUzNDk5MTk0MjVkZTNmM2FmZDIzNGI0NyI6IHsKICAgICAgImJhbGFuY2UiOiAiMHg0NDZjM2IxNWY5OTI2Njg3ZDJjNDA1MzRmZGI1NjQwMDAwMDAwMDAwMDAiCiAgICB9LAogICAgImI0NDAyNTg3MGJjZmMxYTc2ODQ4YzYwNWYyMDViM2QxZGE1NDMwZTQiOiB7CiAgICAgICJiYWxhbmNlIjogIjB4NDQ2YzNiMTVmOTkyNjY4N2QyYzQwNTM0ZmRiNTY0MDAwMDAwMDAwMDAwIgogICAgfSwKICAgICJjOTlmOWViMDM4ODYyY2RkNzllODk5ZWY2MDJlMWVkYTc1NWFlNGNmIjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0KICB9LAogICJudW1iZXIiOiAiMHgwIiwKICAiZ2FzVXNlZCI6ICIweDAiLAogICJwYXJlbnRIYXNoIjogIjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCIKfQ==
    staticnodes: 
      [
    "enode://1be87ad9d1354e8a929e9d8d7c5f93a7add5910b6e5d6c4c0411592664cc9daf0505bc214527d8fb4c1e3761a4da1bca2eb2cdf647696f05704ac1276d35a6d3@caros.quo.dev2.aws.blockchaincloudpoc-develop.com:15090?discport=0",
    "enode://9fac5685361507bb46ab0e39cc836711db8a2314ad178c4b77b53e4cff1998f341e485e67aaeeb058607fe6d51bbbe5ad269f32fd56f9a08d0175d5155ff07d9@maros.quo.dev2.aws.blockchaincloudpoc-develop.com:15020?discport=0",
    "enode://d1a3b31c9a7c3ae06542515d40ff5c1f6db5dc58309889f6b8585a1be546d328547c73755204bdaf11c6c5ab884634fb03a32835fb76e143a41958bc69fa7d5f@stros.quo.dev2.aws.blockchaincloudpoc-develop.com:15030?discport=0",
    "enode://2259db29ee94e1ccffef315798c2212eeb92ab885be86e7471fe76a9c4b63596115b76ca2b807ae317260e102449d3807f7c5cd10488456c78a8bbc2c8e02aee@warros.quo.dev2.aws.blockchaincloudpoc-develop.com:15040?discport=0"
]
    proxy:
      provider: "ambassador"
      external_url: stros.quo.dev2.aws.blockchaincloudpoc-develop.com
      portTM: 443
      rpcport: 15031
      quorumport: 15030
      clientport: 8888
    storage:
      storageclassname: awsstorageclass
      storagesize: 1Gi
      dbstorage: 1Gi
