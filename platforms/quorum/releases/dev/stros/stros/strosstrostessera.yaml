apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: strosstrostessera
  namespace: stros-quo
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: strosstrostessera
  helmVersion: v3
  chart:
    git: https://github.com/RositsaKrasteva/blockchain-automation-framework.git
    ref: feature-386
    path: platforms/quorum/charts/node_tessera  
  values:
    replicaCount: 1
    metadata:
      namespace: stros-quo
      labels:
    images:
      node: quorumengineering/quorum:21.4.2
      alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
      tessera: quorumengineering/tessera:21.4.0
      busybox: busybox
      mysql: mysql/mysql-server:5.7
    node:
      name: stros
      status: default
      consensus: ibft
      subject: O=Store,OU=Store,L=40.73/-74/New York,C=US
      mountPath: /etc/quorum/qdata
      imagePullSecret: regcred
      keystore: keystore_1
      
      servicetype: ClusterIP
      lock: false
      ports:
        rpc: 8546
        raft: 50401
        tm: 443
        quorum: 21000
        db: 3306
      dbname: demodb
      mysqluser: demouser
    vault:
      address: http://vault.internal.dev2.aws.blockchaincloudpoc-develop.com:20001
      secretprefix: secret/stros-quo/crypto/stros
      serviceaccountname: vault-auth
      keyname: quorum
      tm_keyname: transaction
      role: vault-role
      authpath: quorumstros
    tessera:
      dburl: "jdbc:mysql://stros-tessera:3306/demodb"
      dbusername: demouser
      url: "https://stros.quo.dev2.aws.blockchaincloudpoc-develop.com:443"
      clienturl: "http://stros-tessera:8888" #TODO: Enable tls strict for q2t
      othernodes:
        - url: https://caros.quo.dev2.aws.blockchaincloudpoc-develop.com
        - url: https://maros.quo.dev2.aws.blockchaincloudpoc-develop.com
        - url: https://stros.quo.dev2.aws.blockchaincloudpoc-develop.com
        - url: https://warros.quo.dev2.aws.blockchaincloudpoc-develop.com
      tls: "STRICT"
      trust: "TOFU"
    genesis: ewogICJjb25maWciOiB7CiAgICAiY2hhaW5JZCI6IDEwLAogICAgImhvbWVzdGVhZEJsb2NrIjogMCwKICAgICJlaXAxNTBCbG9jayI6IDAsCiAgICAiZWlwMTUwSGFzaCI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICAgImVpcDE1NUJsb2NrIjogMCwKICAgICJlaXAxNThCbG9jayI6IDAsCiAgICAiYnl6YW50aXVtQmxvY2siOiAwLAogICAgImNvbnN0YW50aW5vcGxlQmxvY2siOiAwLAogICAgInBldGVyc2J1cmdCbG9jayI6IDAsCiAgICAiaXN0YW5idWxCbG9jayI6IDAsCiAgICAiaXN0YW5idWwiOiB7CiAgICAgICJlcG9jaCI6IDMwMDAwLAogICAgICAicG9saWN5IjogMCwKICAgICAgImNlaWwyTmJ5M0Jsb2NrIjogMAogICAgfSwKICAgICJ0eG5TaXplTGltaXQiOiAxMjgsCiAgICAicWlwNzE0QmxvY2siOiAwLAogICAgImlzTVBTIjogZmFsc2UsCiAgICAiaXNRdW9ydW0iOiB0cnVlLAogICAgIm1heENvZGVTaXplQ29uZmlnIjogWwogICAgICB7CiAgICAgICAgImJsb2NrIjogMCwKICAgICAgICAic2l6ZSI6IDEyOAogICAgICB9CiAgICBdCiAgfSwKICAibm9uY2UiOiAiMHgwIiwKICAidGltZXN0YW1wIjogIjB4NjE0OGIyYjYiLAogICJleHRyYURhdGEiOiAiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZjg5YWY4NTQ5NDU4M2JmNzk0YmRjMzk4MjYxNWFlNDM1ZmZjMzFiMDcyYmU2ZjI5MjU5NGRjNjRmZTVhZDBmNmM3NDk1OTE0MGY1YTlkNmJkYjdiMTBkNmU1YzI5NGExZTBkNjA1MjFlMzBjODg4YTNhMGRiZGUyYzgwMTg1NGZlMDY3MTk5NDljNzQ4ZmRjZGRiNTgzNDU1OTg4MDQ1ZjE5NTE0YTVhYzUyNmI2Y2ViODQxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGMwIiwKICAiZ2FzTGltaXQiOiAiMHhlMDAwMDAwMCIsCiAgImRpZmZpY3VsdHkiOiAiMHgxIiwKICAibWl4SGFzaCI6ICIweDYzNzQ2OTYzNjE2YzIwNjI3OTdhNjE2ZTc0Njk2ZTY1MjA2NjYxNzU2Yzc0MjA3NDZmNmM2NTcyNjE2ZTYzNjUiLAogICJjb2luYmFzZSI6ICIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLAogICJhbGxvYyI6IHsKICAgICI1ODNiZjc5NGJkYzM5ODI2MTVhZTQzNWZmYzMxYjA3MmJlNmYyOTI1IjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0sCiAgICAiOWM3NDhmZGNkZGI1ODM0NTU5ODgwNDVmMTk1MTRhNWFjNTI2YjZjZSI6IHsKICAgICAgImJhbGFuY2UiOiAiMHg0NDZjM2IxNWY5OTI2Njg3ZDJjNDA1MzRmZGI1NjQwMDAwMDAwMDAwMDAiCiAgICB9LAogICAgImExZTBkNjA1MjFlMzBjODg4YTNhMGRiZGUyYzgwMTg1NGZlMDY3MTkiOiB7CiAgICAgICJiYWxhbmNlIjogIjB4NDQ2YzNiMTVmOTkyNjY4N2QyYzQwNTM0ZmRiNTY0MDAwMDAwMDAwMDAwIgogICAgfSwKICAgICJkYzY0ZmU1YWQwZjZjNzQ5NTkxNDBmNWE5ZDZiZGI3YjEwZDZlNWMyIjogewogICAgICAiYmFsYW5jZSI6ICIweDQ0NmMzYjE1Zjk5MjY2ODdkMmM0MDUzNGZkYjU2NDAwMDAwMDAwMDAwMCIKICAgIH0KICB9LAogICJudW1iZXIiOiAiMHgwIiwKICAiZ2FzVXNlZCI6ICIweDAiLAogICJwYXJlbnRIYXNoIjogIjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCIKfQ==
    staticnodes: 
      [
    "enode://55f6c1e19725b786d443a81e6061e4426de43f9d6e2196de216c7f5f89076238398383298a3461b5e66ef21ffe22e06ea8bb541bb03863db42578cf40aa82a10@caros.quo.dev2.aws.blockchaincloudpoc-develop.com:15090?discport=0",
    "enode://985dcd55684917c12a4a863d97da91e3370931d558d6c9be05db2fdb7f94201a20c2c3a0d0a1779e38e15349978d9d709c7c66bcac0c25cd4a27d9f67b65e059@maros.quo.dev2.aws.blockchaincloudpoc-develop.com:15020?discport=0",
    "enode://0080a2f25ffbf10f0d476f52e35fb9a09bee1d01dd0ed3988c0c634bff18bcfa7209b86abd4db3ed0d501c4844f76596e279dd2dd88c5150af1f6bf54aa5bcda@stros.quo.dev2.aws.blockchaincloudpoc-develop.com:15030?discport=0",
    "enode://84e13f0a003aae7861690c865767e9562edd5bdebf483a8d6c63aaaf3a8e3aab5360ba7349f905a756c01728738729711b6534b4f7f274a2ca82d636099b5469@warros.quo.dev2.aws.blockchaincloudpoc-develop.com:15040?discport=0"
]
    proxy:
      provider: "ambassador"
      external_url: stros.quo.dev2.aws.blockchaincloudpoc-develop.com
      portTM: 443
      rpcport: 15031
      quorumport: 15030
      clientport: 8888
    storage:
      storageclassname: awsstorageclass
      storagesize: 1Gi
      dbstorage: 1Gi
